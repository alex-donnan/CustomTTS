# Generated by Django 5.2.3 on 2025-07-05 02:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True, verbose_name='Action Name')),
                ('key', models.CharField(verbose_name='Action Key')),
                ('description', models.CharField(verbose_name='Action Description')),
                ('enabled', models.BooleanField(verbose_name='Action Globally Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True, verbose_name='Trigger Name')),
                ('description', models.CharField(verbose_name='Trigger Description')),
                ('scope', models.CharField(default=True, verbose_name='Required Scope')),
                ('enabled', models.BooleanField(verbose_name='Trigger Globally Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(unique=True, verbose_name='Twitch User ID')),
                ('login', models.CharField(verbose_name='User Name')),
                ('display_name', models.CharField(verbose_name='User Display Name')),
                ('type', models.CharField(verbose_name='User type')),
                ('broadcaster_type', models.CharField(verbose_name='Broadcaster Type')),
                ('channel_description', models.CharField(verbose_name='Channel Description')),
                ('profile_image_url', models.CharField(verbose_name='Profile Image URL')),
                ('email', models.CharField(verbose_name='Email Address')),
                ('enabled', models.BooleanField(default=True, verbose_name='User Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='UserModeratorRef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moderator', models.CharField(verbose_name='Moderator User ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_owner', to='core.user', to_field='user')),
            ],
            options={
                'unique_together': {('user', 'moderator')},
            },
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_location', models.CharField(max_length=50, verbose_name='Media file path for assets')),
                ('enabled', models.BooleanField(default=False, verbose_name='Action is enabled')),
                ('paused', models.BooleanField(default=False, verbose_name='Action is paused')),
                ('cost', models.IntegerField(default=0, verbose_name='Trigger Cost')),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.action', to_field='name', verbose_name='Action Type')),
                ('trigger_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trigger', to_field='name', verbose_name='Trigger Type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user', to_field='user', verbose_name='Channel Settings')),
            ],
            options={
                'unique_together': {('user', 'action_type', 'trigger_type')},
            },
        ),
    ]
